<?xml version="1.0"?>

<ruleset name="Custom Rules"
    xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.io/ruleset_2_0_0.xsd">

    <description>
        Custom ruleset
    </description>


    <!-- Your rules will come here -->
    <rule ref="category/apex/bestpractices.xml/ApexUnitTestClassShouldHaveAsserts" />
    <rule ref="category/apex/bestpractices.xml/ApexUnitTestShouldNotUseSeeAllDataTrue" />
    <rule ref="category/apex/bestpractices.xml/AvoidLogicInTrigger" />
    <rule ref="category/apex/bestpractices.xml/UnusedLocalVariable" />

    <rule ref="category/apex/errorprone.xml/ApexCSRF" />
    <rule ref="category/apex/errorprone.xml/AvoidHardcodingId" />
    <rule ref="category/apex/errorprone.xml/EmptyCatchBlock" />
    <rule ref="category/apex/errorprone.xml/EmptyIfStmt" />
    <!-- <rule ref="category/apex/errorprone.xml/EmptyStatementBlock" />  default constructors --> 
    <rule ref="category/apex/errorprone.xml/EmptyTryOrFinallyBlock" />
    <rule ref="category/apex/errorprone.xml/EmptyWhileStmt" />
    <rule ref="category/apex/errorprone.xml/InaccessibleAuraEnabledGetter" />
    <rule ref="category/apex/errorprone.xml/MethodWithSameNameAsEnclosingClass" />
    <rule ref="category/apex/errorprone.xml/OverrideBothEqualsAndHashcode" />
    <rule ref="category/apex/errorprone.xml/TestMethodsMustBeInTestClasses" />

    <rule ref="category/apex/design.xml/AvoidDeeplyNestedIfStmts" />

    <rule ref="category/apex/codestyle.xml/IfElseStmtsMustUseBraces" />
    <rule ref="category/apex/codestyle.xml/IfStmtsMustUseBraces" />
    <rule ref="category/apex/codestyle.xml/ForLoopsMustUseBraces" />
    <rule ref="category/apex/codestyle.xml/WhileLoopsMustUseBraces" /> -->
    <rule ref="category/apex/codestyle.xml/ClassNamingConventions">
        <properties>
            <property name="testClassPattern" value="[A-Z][a-zA-Z0-9_]*" />
            <property name="abstractClassPattern" value="[A-Z][a-zA-Z0-9_]*" />
            <property name="classPattern" value="[A-Z][a-zA-Z0-9_]*" />
            <property name="interfacePattern" value="[A-Z][a-zA-Z0-9_]*" />
            <property name="enumPattern" value="[A-Z][a-zA-Z0-9_]*" />
        </properties>
    </rule>

    <rule ref="category/apex/codestyle.xml/MethodNamingConventions">
        <properties>
            <property name="testPattern" value="[a-z][a-zA-Z0-9_]*" />
            <property name="staticPattern" value="[a-z][a-zA-Z0-9_]*" />
            <property name="instancePattern" value="[a-z][a-zA-Z0-9_]*" />
        </properties>
    </rule>
    <rule ref="category/apex/design.xml/CyclomaticComplexity">
        <properties>
            <property name="classReportLevel" value="750" />
            <property name="methodReportLevel" value="12" />
        </properties>
    </rule>
    <rule ref="category/apex/design.xml/StdCyclomaticComplexity">
        <properties>
            <property name="reportLevel" value="12" />
            <property name="showClassesComplexity" value="false" />
            <property name="showMethodsComplexity" value="true" />
        </properties>
    </rule>

    <!-- <rule ref="category/apex/codestyle.xml/FieldDeclarationsShouldBeAtStart" /> custom exception declaration precedes the field declarations -->
    <!-- <rule ref="category/apex/codestyle.xml/FieldNamingConventions">
        <properties>
            <property name="enumConstantPattern" value="[A-Z][A-Z0-9_]*" />
            <property name="constantPattern" value="[A-Z][A-Z0-9_]*" /> many constants breach the pattern
            <property name="finalPattern" value="[a-z][a-zA-Z0-9]*" /> many finals breach the pattern
            <property name="staticPattern" value="[a-z][a-zA-Z0-9]*" /> many statics breach the pattern
            <property name="instancePattern" value="[a-z][a-zA-Z0-9]*" />
        </properties>
    </rule> -->
    
    <!-- <rule ref="category/apex/codestyle.xml/FormalParameterNamingConventions">
        <properties>
            <property name="finalMethodParameterPattern" value="[a-z][a-zA-Z0-9]*" />
            <property name="methodParameterPattern" value="[a-z][a-zA-Z0-9]*" />
        </properties>
    </rule> -->
    
    <!-- <rule ref="category/apex/codestyle.xml/LocalVariableNamingConventions">
        <properties>
            <property name="finalLocalPattern" value="[a-z][a-zA-Z0-9]*" />
            <property name="localPattern" value="[a-z][a-zA-Z0-9]*" />
        </properties>
    </rule> -->
    
    <!-- <rule ref="category/apex/codestyle.xml/PropertyNamingConventions">
        <properties>
            <property name="staticPattern" value="[a-zA-Z0-9_]*" /> no single pattern
            <property name="instancePattern" value="[a-zA-Z0-9]*" /> can be DTO fields
        </properties>
    </rule> -->

</ruleset>